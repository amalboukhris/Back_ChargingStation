[
  {
    "ContainingType": "VehicleChargingStation.Controllers.BorneController",
    "Method": "AddBorne",
    "RelativePath": "api/Borne",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "borneDto",
        "Type": "BorneCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "VehicleChargingStation.Controllers.BorneController",
    "Method": "GetAllBornes",
    "RelativePath": "api/Borne",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ChargingStation.Models.Borne, ChargingStation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "VehicleChargingStation.Controllers.BorneController",
    "Method": "GetBorne",
    "RelativePath": "api/Borne/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "VehicleChargingStation.Controllers.BorneController",
    "Method": "GetUserNotifications",
    "RelativePath": "api/Borne/notifications/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "VehicleChargingStation.Controllers.BorneController",
    "Method": "ReleaseBorne",
    "RelativePath": "api/Borne/release/{id}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "VehicleChargingStation.Controllers.BorneController",
    "Method": "ReserveBorne",
    "RelativePath": "api/Borne/reserve/{id}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "VehicleChargingStation.Controllers.BorneController",
    "Method": "GetAllBornesByStation",
    "RelativePath": "api/Borne/station/{stationId}/available",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "stationId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "VehicleChargingStation.Controllers.BorneController",
    "Method": "GetUnreadNotifications",
    "RelativePath": "api/Borne/user/{userId}/unread-notifications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ChargingStation.Controllers.ChargingStationController",
    "Method": "GetAllStations",
    "RelativePath": "api/ChargingStation",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ChargingStation.Controllers.ChargingStationController",
    "Method": "CreateStation",
    "RelativePath": "api/ChargingStation",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "stationDto",
        "Type": "ChargingStation.Controllers.ChargingStationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ChargingStation.Controllers.ChargingStationController",
    "Method": "SearchStations",
    "RelativePath": "api/ChargingStation/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "VehicleChargingStation.Controllers.UserController",
    "Method": "GetUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChargingStation.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "VehicleChargingStation.Controllers.UserController",
    "Method": "GetAllUsers",
    "RelativePath": "api/User/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ChargingStation.Models.User, ChargingStation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "VehicleChargingStation.Controllers.UserController",
    "Method": "Login",
    "RelativePath": "api/User/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequest",
        "Type": "VehicleChargingStation.Controllers.LoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "VehicleChargingStation.Controllers.UserController",
    "Method": "GetProfile",
    "RelativePath": "api/User/profile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "VehicleChargingStation.Controllers.UserController",
    "Method": "UpdateProfile",
    "RelativePath": "api/User/profile",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "VehicleChargingStation.Dto.updateDto",
        "IsRequired": true
      },
      {
        "Name": "authorization",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "VehicleChargingStation.Controllers.UserController",
    "Method": "PatchProfile",
    "RelativePath": "api/User/profile",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "patchDoc",
        "Type": "Microsoft.AspNetCore.JsonPatch.JsonPatchDocument\u00601[[ChargingStation.Models.User, ChargingStation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "VehicleChargingStation.Controllers.UserController",
    "Method": "Register",
    "RelativePath": "api/User/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "ChargingStation.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ChargingStation.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ChargingStation.WeatherForecast, ChargingStation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]